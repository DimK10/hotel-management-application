# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
orbs:
  slack: circleci/slack@4.4.4
jobs:
  deploy:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - run: echo "deploy Hotel Management App"
      - slack/notify:
          event: fail
          template: basic_fail_1
          channel: $SLACK_DEFAULT_CHANNEL
      - slack/notify:
          event: pass
          template: success_tagged_deploy_1
          channel: $SLACK_DEFAULT_CHANNEL
    test:
      docker:
        - image: 'cimg/base:stable'
      steps:
        - run: echo "test Hotel Management Ap"
  workflows:
    test-and-deploy:
      jobs:
        - test
        - slack/on-hold:
            context: slack-secrets
            filters:
              tags:
                only: /^v.*/
            requires:
              - test
        - pause_workflow:
            filters:
              tags:
                only: /^v.*/
            requires:
              - test
              - slack/on-hold
            type: approval
        - deploy:
            filters:
              tags:
                only: /^v.*/
            requires:
              - pause_workflow

  build:
    docker:
      # specify the version you desire here
      #- image: circleci/openjdk:8-jdk
      - image: circleci/openjdk:11-browsers-legacy

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/hotel-management-application

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - hotel-management-application-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - hotel-management-application-

      - run: mvn install -DskipTests

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: hotel-management-application-{{ checksum "pom.xml" }}

      # run tests!
      - run: mvn integration-test

      - store_test_results:
          path: target/surefire-reports

      - run:
          name: Send to CodeCov
          command: bash <(curl -s https://codecov.io/bash)